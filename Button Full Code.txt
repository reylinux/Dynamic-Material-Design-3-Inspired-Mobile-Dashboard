type: horizontal-stack
cards:
  - type: custom:local-conditional-card
    id: home
    default: show
    card:
      type: vertical-stack
      cards:
        - type: custom:paper-buttons-row
          styles:
            background-color: rgba(215, 215, 215, 0.3)
            border: 4px solid none
            border-radius: 20px
            justify-content: center
            width: max-content
            margin: 0 auto 12px auto
          buttons:
            - layout: name
              name: Home
              ripple: none
              tap_action:
                action: fire-dom-event
                local_conditional_card:
                  action: set
                  ids:
                    - home: show
                    - environment: hide
                    - active: hide
              styles:
                name:
                  color: "{{ states('sensor.theme_tertiary_color') }}"
                  padding: 0 22px
                  font-weight: bold
                button:
                  background: "{{ states('sensor.theme_on_tertiary_color') }}"
                  border-radius: 24px
                  height: 24px
                  display: flex
            - layout: name
              name: Environment
              ripple: none
              tap_action:
                action: fire-dom-event
                local_conditional_card:
                  action: set
                  ids:
                    - home: hide
                    - environment: show
                    - active: hide
              styles:
                name:
                  color: var(--primary-text-color)
                  padding: 0 22px
                button:
                  background: none
                  border-radius: 24px
                  height: 24px
                  display: flex
            - layout: name
              name: Active
              ripple: none
              tap_action:
                action: fire-dom-event
                local_conditional_card:
                  action: set
                  ids:
                    - home: hide
                    - environment: hide
                    - active: show
              styles:
                name:
                  color: var(--primary-text-color)
                  padding: 0 22px
                button:
                  background: none
                  border-radius: 24px
                  height: 24px
                  display: flex
        - type: conditional
          conditions:
            - condition: state
              entity: switch.all_water_taps
              state: "on"
          card:
            type: custom:simple-swipe-card
            cards:
              - type: custom:vertical-stack-in-card
                cards:
                  - type: grid
                    square: false
                    columns: 2
                    cards:
                      - type: custom:mushroom-template-card
                        entity: sensor.house_average_temperature
                        primary: |
                          {{ states(entity) | round(1) }}°C 
                        secondary: |
                          {{ state_attr(entity,'friendly_name') }} 
                        icon: |
                          {% set hvac_mode = states('climate.heat_pump') %}
                          {% if hvac_mode == 'heat' %} mdi:fire
                          {% elif hvac_mode == 'cool' %} mdi:snowflake
                          {% elif hvac_mode == 'fan_only' %} mdi:fan
                          {% else %} mdi:thermometer
                          {% endif %}
                        icon_color: |
                          {% set hvac_mode = states('climate.heat_pump') %}
                          {% if hvac_mode == 'heat' %} #2196f3
                          {% elif hvac_mode == 'cool' %} #12c8da
                          {% elif hvac_mode == 'fan_only' %} #029688
                          {% else %}
                            {% set temp = states('sensor.house_average_temperature') | float %}
                            {% if temp < 16 %} #CEB2F5
                            {% elif temp < 18 %} #5EBDEE
                            {% elif temp < 22 %} #9cc8b8
                            {% elif temp < 24 %} #e7b562
                            {% elif temp < 27 %} #FF564B
                            {% else %} #99332d
                            {% endif %}
                          {% endif %}
                        tap_action:
                          action: more-info
                      - type: custom:mushroom-template-card
                        entity: sensor.outdoor_temperature
                        primary: |
                          {{ states(entity) | round(1) }}°C 
                        secondary: |
                          Outdoor Feels Like
                        icon: "{{ states('sensor.weather_condition_icon') }}"
                        icon_color: >
                          {% set temp = states('sensor.outdoor_temperature') |
                          float %}

                          {% if temp < 16 %} #907CAB

                          {% elif temp < 18 %} #4790b6

                          {% elif temp < 22 %} #77998c

                          {% elif temp < 24 %} #b08a4a

                          {% elif temp < 27 %} #c34139      

                          {% else %} #752722 {% endif %}
                        tap_action:
                          action: navigate
                          navigation_path: /mobile-dashboard/weather
                  - type: custom:config-template-card
                    entities:
                      - sensor.house_average_temperature
                      - sensor.outdoor_temperature
                      - climate.heat_pump
                    variables:
                      - states['climate.heat_pump'].state
                      - states['sensor.house_average_temperature'].state
                      - states['sensor.outdoor_temperature'].state
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - entity: sensor.house_average_temperature
                          name: House Average Temperature
                          color: |-
                            ${vars[0] === 'heat' ? '#2196f3' : 
                              (vars[0] === 'cool' ? '#12c8da' : 
                              (vars[0] === 'fan_only' ? '#029688' : 
                              (vars[1] < 16 ? '#CEB2F5' :
                              (vars[1] < 18 ? '#5EBDEE' :
                              (vars[1] < 22 ? '#9cc8b8' :
                              (vars[1] < 24 ? '#e7b562' :
                              (vars[1] < 27 ? '#FF564B' : '#99332d')))))))}
                        - entity: sensor.outdoor_temperature
                          name: Outdoor Temperature
                          color: |-
                            ${vars[2] < 16 ? '#907CAB' :
                              (vars[2] < 18 ? '#4790b6' :        
                              (vars[2] < 22 ? '#77998c' :
                              (vars[2] < 24 ? '#b08a4a' :
                              (vars[2] < 27 ? '#c34139' :'#752722'))))}
                          y_axis: secondary
                      hours_to_show: 24
                      line_width: 3
                      font_size: 50
                      animate: true
                      show:
                        name: false
                        icon: false
                        state: false
                        legend: false
                        fill: fade
                  - type: horizontal-stack
                    cards:
                      - type: custom:mushroom-climate-card
                        entity: climate.heat_pump
                        primary_info: none
                        secondary_info: none
                        icon_type: none
                        show_temperature_control: true
                      - type: custom:mushroom-climate-card
                        entity: climate.heat_pump
                        primary_info: none
                        secondary_info: none
                        icon_type: none
                        hvac_modes:
                          - cool
                          - heat
                          - fan_only
                          - "off"
              - type: custom:vertical-stack-in-card
                cards:
                  - type: grid
                    square: false
                    columns: 2
                    cards:
                      - type: custom:mushroom-template-card
                        entity: sensor.right_walkway_water_tap_flow
                        primary: |
                          {{ states(entity) | round(1) }} m³/h
                        secondary: Water Flow Rate
                        icon: mdi:water
                        icon_color: >
                          {% set flow =
                          states('sensor.right_walkway_water_tap_flow') | float
                          %}

                          {% if flow < 0.1 %} #A9A9A9

                          {% elif flow < 0.3 %} #ffd34f

                          {% elif flow < 0.5 %} #9fe7e8   

                          {% else %} #36a9e2

                          {% endif %}
                        tap_action:
                          action: none
                  - type: custom:config-template-card
                    entities: sensor.right_walkway_water_tap_flow
                    variables:
                      - states['sensor.right_walkway_water_tap_flow'].state
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - entity: sensor.right_walkway_water_tap_flow
                          name: Water Flow
                          color: |-
                            ${vars[0] < 0.1 ? '#a9a9a9' :     
                              (vars[0] < 0.3 ? '#ffd34f' :
                              (vars[0] < 0.5 ? '#9fe7e8' : '#36a9e2'))}
                      hours_to_show: 24
                      line_width: 3
                      font_size: 50
                      animate: true
                      show:
                        name: false
                        icon: false
                        state: false
                        legend: false
                        fill: fade
                  - type: horizontal-stack
                    cards:
                      - type: custom:mushroom-entity-card
                        entity: sensor.current_water_restriction
                        secondary_info: state
                        tap_action:
                          action: toggle
                        icon: mdi:water
                        card_mod:
                          style:
                            mushroom-shape-icon$: |
                              .shape {
                                --shape-color: {{
                                  '#6f9c3d' if states('input_boolean.no_water_restriction') == 'on' else
                                  '#a5c90f' if states('input_boolean.water_level_1') == 'on' else
                                  '#ffb366' if states('input_boolean.water_level_2') == 'on' else
                                  '#ff8829' if states('input_boolean.water_level_3') == 'on' else
                                  '#fe6b40' if states('input_boolean.water_level_4') == 'on' else
                                  'white'
                                }} !important;
                              }
                            .: |
                              ha-state-icon {
                                color: {{
                                  'white' if states('input_boolean.no_water_restriction') == 'on' else 'none'
                                }};
                              }
        - type: conditional
          conditions:
            - condition: state
              entity: switch.all_water_taps
              state: "off"
          card:
            type: custom:vertical-stack-in-card
            cards:
              - type: grid
                square: false
                columns: 2
                cards:
                  - type: custom:mushroom-template-card
                    entity: sensor.house_average_temperature
                    primary: |
                      {{ states(entity) | round(1) }}°C 
                    secondary: |
                      {{ state_attr(entity,'friendly_name') }} 
                    icon: |
                      {% set hvac_mode = states('climate.heat_pump') %}
                      {% if hvac_mode == 'heat' %} mdi:fire
                      {% elif hvac_mode == 'cool' %} mdi:snowflake
                      {% elif hvac_mode == 'fan_only' %} mdi:fan
                      {% else %} mdi:thermometer
                      {% endif %}
                    icon_color: |
                      {% set hvac_mode = states('climate.heat_pump') %}
                      {% if hvac_mode == 'heat' %} #FF6F22
                      {% elif hvac_mode == 'cool' %} #2196F3
                      {% elif hvac_mode == 'fan_only' %} #029688
                      {% else %}
                        {% set temp = states('sensor.house_average_temperature') | float %}
                        {% if temp < 16 %} #CEB2F5
                        {% elif temp < 18 %} #5EBDEE
                        {% elif temp < 22 %} #9cc8b8
                        {% elif temp < 24 %} #e7b562
                        {% elif temp < 27 %} #FF564B
                        {% else %} #99332d
                        {% endif %}
                      {% endif %}
                    tap_action:
                      action: more-info
                  - type: custom:mushroom-template-card
                    entity: sensor.outdoor_temperature
                    primary: |
                      {{ states(entity) | round(1) }}°C 
                    secondary: |
                      Outdoor Feels Like
                    icon: "{{ states('sensor.weather_condition_icon') }}"
                    icon_color: >
                      {% set temp = states('sensor.outdoor_temperature') | float
                      %}

                      {% if temp < 16 %} #907CAB

                      {% elif temp < 18 %} #4790b6

                      {% elif temp < 22 %} #77998c

                      {% elif temp < 24 %} #b08a4a

                      {% elif temp < 27 %} #c34139      

                      {% else %} #752722 {% endif %}
                    tap_action:
                      action: navigate
                      navigation_path: /mobile-dashboard/weather
              - type: custom:config-template-card
                entities:
                  - sensor.house_average_temperature
                  - sensor.outdoor_temperature
                  - climate.heat_pump
                variables:
                  - states['climate.heat_pump'].state
                  - states['sensor.house_average_temperature'].state
                  - states['sensor.outdoor_temperature'].state
                card:
                  type: custom:mini-graph-card
                  entities:
                    - entity: sensor.house_average_temperature
                      name: House Average Temperature
                      color: |-
                        ${vars[0] === 'heat' ? '#FF6F22' : 
                          (vars[0] === 'cool' ? '#2196F3' : 
                          (vars[0] === 'fan_only' ? '#029688' : 
                          (vars[1] < 16 ? '#CEB2F5' :
                          (vars[1] < 18 ? '#5EBDEE' :
                          (vars[1] < 22 ? '#9cc8b8' :
                          (vars[1] < 24 ? '#e7b562' :
                          (vars[1] < 27 ? '#FF564B' : '#99332d')))))))}
                    - entity: sensor.outdoor_temperature
                      name: Outdoor Temperature
                      color: |-
                        ${vars[2] < 16 ? '#907CAB' :
                          (vars[2] < 18 ? '#4790b6' :        
                          (vars[2] < 22 ? '#77998c' :
                          (vars[2] < 24 ? '#b08a4a' :
                          (vars[2] < 27 ? '#c34139' :'#752722'))))}
                      y_axis: secondary
                  hours_to_show: 24
                  line_width: 3
                  font_size: 50
                  animate: true
                  show:
                    name: false
                    icon: false
                    state: false
                    legend: false
                    fill: fade
              - type: horizontal-stack
                cards:
                  - type: custom:mushroom-climate-card
                    entity: climate.heat_pump
                    primary_info: none
                    secondary_info: none
                    icon_type: none
                    show_temperature_control: true
                  - type: custom:mushroom-climate-card
                    entity: climate.heat_pump
                    primary_info: none
                    secondary_info: none
                    icon_type: none
                    hvac_modes:
                      - cool
                      - heat
                      - fan_only
                      - "off"
        - type: custom:simple-swipe-card
          cards:
            - type: custom:vertical-stack-in-card
              cards:
                - type: custom:mushroom-template-card
                  layout: horizontal
                  tap_action:
                    action: none
                  hold_action:
                    action: none
                  double_tap_action:
                    action: none
                  primary: Room Occupancy
                  card_mod:
                    style: |
                      ha-card {
                        background: transparent !important;
                        box-shadow: none !important;
                      }
                      .card-content {
                        background: transparent !important;
                      }
                - type: custom:mushroom-chips-card
                  chips:
                    - type: template
                      entity: input_boolean.baby_room_occupancy
                      icon: mdi:baby-carriage
                      icon_color: |-
                        {% if is_state(entity, 'on') %} 
                          #f385bc
                        {% else %}
                         var(--primary-text-color)
                        {% endif %}    
                      tap_action:
                        action: toggle
                      content: |-
                        {% if is_state(entity, 'on') %} 
                          Baby Room
                        {% else %}
                        {% endif %}
                    - type: template
                      entity: input_boolean.master_bedroom_occupancy
                      icon: mdi:bed-king
                      icon_color: |-
                        {% if is_state(entity, 'on') %} 
                          #89CFF0
                        {% else %}
                         var(--primary-text-color)
                        {% endif %}
                      tap_action:
                        action: toggle
                      content: |-
                        {% if is_state(entity, 'on') %} 
                          Master Bedroom
                        {% else %}
                        {% endif %}            
                    - type: template
                      entity: input_boolean.single_guest_room_occupancy
                      icon: mdi:account-plus
                      icon_color: |-
                        {% if is_state(entity, 'on') %} 
                          #FFA500
                        {% else %}
                         var(--primary-text-color)
                        {% endif %}
                      tap_action:
                        action: toggle
                      content: |-
                        {% if is_state(entity, 'on') %} 
                          Single Guest
                        {% else %}
                        {% endif %}     
                    - type: template
                      entity: input_boolean.multiple_guest_room_occupancy
                      icon: mdi:account-group
                      icon_color: |-
                        {% if is_state(entity, 'on') %} 
                          #A52A2A
                        {% else %}
                         var(--primary-text-color)
                        {% endif %}
                      tap_action:
                        action: toggle
                      content: |-
                        {% if is_state(entity, 'on') %} 
                          Multiple Guest
                        {% else %}
                        {% endif %}       
                  alignment: start
                  card_mod:
                    style: |
                      ha-card {
                        background: transparent !important;
                        box-shadow: none !important;
                      }
                      .chip-container {
                        background: transparent !important;
                      }
              card_mod:
                style: |
                  ha-card {
                    background: transparent !important;
                    box-shadow: none !important;
                    margin-top: 10px !important;
                  }
            - type: custom:vertical-stack-in-card
              cards:
                - type: custom:mushroom-template-card
                  primary: Presence Status
                  layout: horizontal
                  tap_action:
                    action: none
                  hold_action:
                    action: none
                  double_tap_action:
                    action: none
                  card_mod:
                    style: |
                      ha-card {
                        background: transparent !important;
                        box-shadow: none !important;
                      }
                      .card-content {
                        background: transparent !important;
                      }
                - type: custom:mushroom-chips-card
                  chips:
                    - type: template
                      entity: binary_sensor.presence_active_la
                      icon: mdi:sofa
                      icon_color: |-
                        {% if is_state(entity, 'on') %} 
                        {% else %}
                         var(--primary-text-color)
                        {% endif %}
                      tap_action:
                        action: perform-action
                        perform_action: script.toggle_presence_sensor_la
                        target: {}
                      content: |-
                        {% if is_state(entity, 'on') %} 
                          Living Area
                        {% else %}
                        {% endif %}
                    - type: template
                      entity: automation.room_presence_master_bedroom
                      icon: mdi:bed-king
                      icon_color: |-
                        {% if is_state(entity, 'on') %} 
                        {% else %}
                         var(--primary-text-color)
                        {% endif %}
                      tap_action:
                        action: toggle
                      content: |-
                        {% if is_state(entity, 'on') %} 
                          Master Bedroom
                        {% else %}
                        {% endif %}
                    - type: template
                      entity: automation.room_presence_baby_room
                      icon: mdi:baby-carriage
                      icon_color: |-
                        {% if is_state(entity, 'on') %} 
                        {% else %}
                         var(--primary-text-color)
                        {% endif %}
                      tap_action:
                        action: toggle
                      content: |-
                        {% if is_state(entity, 'on') %} 
                          Baby Room
                        {% else %}
                        {% endif %}      
                    - type: template
                      entity: automation.room_presence_single_guest_room
                      icon: mdi:account-plus
                      icon_color: |-
                        {% if is_state(entity, 'on') %} 
                        {% else %}
                         var(--primary-text-color)
                        {% endif %}
                      tap_action:
                        action: toggle
                      content: |-
                        {% if is_state(entity, 'on') %} 
                          Single Guest
                        {% else %}
                        {% endif %}
                  alignment: start
                  card_mod:
                    style: |
                      ha-card {
                        background: transparent !important;
                        box-shadow: none !important;
                      }
                      .chip-container {
                        background: transparent !important;
                      }
                - type: custom:button-card
                  show_name: false
                  show_icon: false
                  tap_action:
                    action: none
                  styles:
                    card:
                      - background: none
                      - box-shadow: none
              card_mod:
                style: |
                  ha-card {
                    background: transparent !important;
                    box-shadow: none !important;
                  }
          show_pagination: true
          card_spacing: 15
          enable_loopback: false
          swipe_direction: horizontal
          enable_auto_swipe: false
          auto_swipe_interval: 2000
          enable_reset_after: false
          reset_after_timeout: 30000
          reset_target_card: 1
          card_mod:
            style: |
              :host {
                --simple-swipe-card-pagination-dot-active-color: var(--primary-text-color);
                --simple-swipe-card-pagination-dot-size: 7px;
                --simple-swipe-card-transition-speed: 0.5s;
              }  
        - entities:
            - entity: calendar.[YOUR_CALENDAR_ENTITY]
              accent_color: "#ff6a6a"
            - entity: calendar.[YOUR_CALENDAR_ENTITY]
              accent_color: "#71c8fe"
            - entity: calendar.[YOUR_CALENDAR_ENTITY]
              accent_color: "#d3f37f"
            - entity: calendar.[YOUR_CALENDAR_ENTITY]
              accent_color: "#f9da4e"
          days_to_show: 10
          compact_events_to_show: 10
          background_color: transparent
          vertical_line_width: 5px
          event_spacing: 6px
          first_day_of_week: monday
          show_week_numbers: iso
          month_separator_width: 3px
          month_separator_color: "#E5E4E2"
          show_progress_bar: true
          weather:
            position: event
            date:
              show_conditions: true
              show_high_temp: true
              show_low_temp: false
              icon_size: 14px
              font_size: 12px
              color: var(--primary-text-color)
            event:
              show_conditions: true
              show_temp: true
              icon_size: 14px
              font_size: 12px
              color: var(--primary-text-color)
            entity: weather.forecast_home
          tap_action:
            action: expand
          type: custom:calendar-card-pro
    hide_in_preview: true
  - type: custom:local-conditional-card
    id: environment
    default: hide
    card:
      type: vertical-stack
      cards:
        - type: custom:paper-buttons-row
          styles:
            background-color: rgba(215, 215, 215, 0.3)
            border: 4px solid none
            border-radius: 20px
            justify-content: center
            width: max-content
            margin: 0 auto 12px auto
          buttons:
            - layout: name
              name: Home
              ripple: none
              tap_action:
                action: fire-dom-event
                local_conditional_card:
                  action: set
                  ids:
                    - home: show
                    - environment: hide
                    - active: hide
              styles:
                name:
                  color: var(--primary-text-color)
                  padding: 0 22px
                button:
                  background: none
                  border-radius: 24px
                  height: 24px
                  display: flex
            - layout: name
              name: Environment
              ripple: none
              tap_action:
                action: fire-dom-event
                local_conditional_card:
                  action: set
                  ids:
                    - home: hide
                    - environment: show
                    - active: hide
              styles:
                name:
                  color: "{{ states('sensor.theme_tertiary_color') }}"
                  padding: 0 22px
                  font-weight: bold
                button:
                  background: "{{ states('sensor.theme_on_tertiary_color') }}"
                  border-radius: 24px
                  height: 24px
                  display: flex
            - layout: name
              name: Active
              ripple: none
              tap_action:
                action: fire-dom-event
                local_conditional_card:
                  action: set
                  ids:
                    - home: hide
                    - environment: hide
                    - active: show
              styles:
                name:
                  color: var(--primary-text-color)
                  padding: 0 22px
                button:
                  background: none
                  border-radius: 24px
                  height: 24px
                  display: flex
        - type: custom:simple-swipe-card
          cards:
            - type: vertical-stack
              cards:
                - type: custom:mushroom-title-card
                  title: Room Temperature
                  card_mod:
                    style: |
                      ha-card {
                        --title-font-size: 20px !important;
                      }
                - type: custom:stack-in-card
                  cards:
                    - type: entities
                      entities:
                        - entity: sensor.outdoor_temperature
                          name: Outside
                          icon: mdi:weather-partly-cloudy
                          card_mod:
                            style: |
                              hui-generic-entity-row {
                                {% set temp = states(config.entity) | float %}
                                {% set percent = ((temp + 10) / 50 * 100) | round(1) %}

                                {% if temp < 16 %}
                                  {% set rgb_light = '206,178,245' %}
                                  {% set rgb_dark  = '156,128,195' %}
                                {% elif temp < 18 %}
                                  {% set rgb_light = '163,217,245' %}
                                  {% set rgb_dark  = '113,167,195' %}
                                {% elif temp < 22 %}
                                  {% set rgb_light = '205,227,219' %}
                                  {% set rgb_dark  = '155,177,169' %}
                                {% elif temp < 24 %}
                                  {% set rgb_light = '251,217,160' %}
                                  {% set rgb_dark  = '201,167,110' %}
                                {% elif temp < 27 %}
                                  {% set rgb_light = '244,168,163' %}
                                  {% set rgb_dark  = '194,118,113' %}
                                {% else %}
                                  {% set rgb_light = '223,123,116' %}
                                  {% set rgb_dark  = '173,73,66' %}
                                {% endif %}

                                /* Detect dark mode with CSS media query and set colors accordingly */
                                --rgb: {{ rgb_light }};
                                --text-color: black !important;

                                @media (prefers-color-scheme: dark) {
                                  --rgb: {{ rgb_dark }};
                                  --text-color: white !important;
                                }

                                background:
                                  linear-gradient(95deg,
                                    rgba(var(--rgb), 0.13) 0%,
                                    rgba(var(--rgb), 0.13) {{percent}}%,
                                    rgba(var(--rgb), 0.55) {{percent}}%,
                                    rgba(12,14,18,0.42) 100%
                                  ),
                                  linear-gradient(120deg, 
                                    rgba(255,255,255,0.11) 7%, 
                                    rgba(255,255,255,0.06) 13%, 
                                    rgba(255,255,255,0.00) 38%,
                                    rgba(255,255,255,0.08) 47%, 
                                    rgba(255,255,255,0.00) 70%,
                                    rgba(255,255,255,0.09) 82%,
                                    rgba(255,255,255,0.00) 100%
                                  ),
                                  repeating-linear-gradient(100deg, rgba(255,255,255,0.011) 0 2px, rgba(0,0,0,0.015) 2px 6px);
                                }
                              }
                        - entity: sensor.living_room_temperature
                          name: Living Area
                          icon: mdi:sofa
                          card_mod:
                            style: |
                              hui-generic-entity-row {
                                {% set temp = states(config.entity) | float %}
                                {% set percent = ((temp + 10) / 50 * 100) | round(1) %}

                                {% if temp < 16 %}
                                  {% set rgb_light = '206,178,245' %}
                                  {% set rgb_dark  = '156,128,195' %}
                                {% elif temp < 18 %}
                                  {% set rgb_light = '163,217,245' %}
                                  {% set rgb_dark  = '113,167,195' %}
                                {% elif temp < 22 %}
                                  {% set rgb_light = '205,227,219' %}
                                  {% set rgb_dark  = '155,177,169' %}
                                {% elif temp < 24 %}
                                  {% set rgb_light = '251,217,160' %}
                                  {% set rgb_dark  = '201,167,110' %}
                                {% elif temp < 27 %}
                                  {% set rgb_light = '244,168,163' %}
                                  {% set rgb_dark  = '194,118,113' %}
                                {% else %}
                                  {% set rgb_light = '223,123,116' %}
                                  {% set rgb_dark  = '173,73,66' %}
                                {% endif %}

                                /* Detect dark mode with CSS media query and set colors accordingly */
                                --rgb: {{ rgb_light }};
                                --text-color: black !important;

                                @media (prefers-color-scheme: dark) {
                                  --rgb: {{ rgb_dark }};
                                  --text-color: white !important;
                                }

                                background:
                                  linear-gradient(95deg,
                                    rgba(var(--rgb), 0.13) 0%,
                                    rgba(var(--rgb), 0.13) {{percent}}%,
                                    rgba(var(--rgb), 0.55) {{percent}}%,
                                    rgba(12,14,18,0.42) 100%
                                  ),
                                  linear-gradient(120deg, 
                                    rgba(255,255,255,0.11) 7%, 
                                    rgba(255,255,255,0.06) 13%, 
                                    rgba(255,255,255,0.00) 38%,
                                    rgba(255,255,255,0.08) 47%, 
                                    rgba(255,255,255,0.00) 70%,
                                    rgba(255,255,255,0.09) 82%,
                                    rgba(255,255,255,0.00) 100%
                                  ),
                                  repeating-linear-gradient(100deg, rgba(255,255,255,0.011) 0 2px, rgba(0,0,0,0.015) 2px 6px);
                                }
                              }
                        - entity: sensor.master_bedroom_temperature
                          name: Master Bedroom
                          icon: mdi:bed-king
                          card_mod:
                            style: |
                              hui-generic-entity-row {
                                {% set temp = states(config.entity) | float %}
                                {% set percent = ((temp + 10) / 50 * 100) | round(1) %}

                                {% if temp < 16 %}
                                  {% set rgb_light = '206,178,245' %}
                                  {% set rgb_dark  = '156,128,195' %}
                                {% elif temp < 18 %}
                                  {% set rgb_light = '163,217,245' %}
                                  {% set rgb_dark  = '113,167,195' %}
                                {% elif temp < 22 %}
                                  {% set rgb_light = '205,227,219' %}
                                  {% set rgb_dark  = '155,177,169' %}
                                {% elif temp < 24 %}
                                  {% set rgb_light = '251,217,160' %}
                                  {% set rgb_dark  = '201,167,110' %}
                                {% elif temp < 27 %}
                                  {% set rgb_light = '244,168,163' %}
                                  {% set rgb_dark  = '194,118,113' %}
                                {% else %}
                                  {% set rgb_light = '223,123,116' %}
                                  {% set rgb_dark  = '173,73,66' %}
                                {% endif %}

                                /* Detect dark mode with CSS media query and set colors accordingly */
                                --rgb: {{ rgb_light }};
                                --text-color: black !important;

                                @media (prefers-color-scheme: dark) {
                                  --rgb: {{ rgb_dark }};
                                  --text-color: white !important;
                                }

                                background:
                                  linear-gradient(95deg,
                                    rgba(var(--rgb), 0.13) 0%,
                                    rgba(var(--rgb), 0.13) {{percent}}%,
                                    rgba(var(--rgb), 0.55) {{percent}}%,
                                    rgba(12,14,18,0.42) 100%
                                  ),
                                  linear-gradient(120deg, 
                                    rgba(255,255,255,0.11) 7%, 
                                    rgba(255,255,255,0.06) 13%, 
                                    rgba(255,255,255,0.00) 38%,
                                    rgba(255,255,255,0.08) 47%, 
                                    rgba(255,255,255,0.00) 70%,
                                    rgba(255,255,255,0.09) 82%,
                                    rgba(255,255,255,0.00) 100%
                                  ),
                                  repeating-linear-gradient(100deg, rgba(255,255,255,0.011) 0 2px, rgba(0,0,0,0.015) 2px 6px);
                                }
                              }
                        - entity: sensor.baby_room_temperature
                          name: Baby Room
                          icon: mdi:baby-carriage
                          card_mod:
                            style: |
                              hui-generic-entity-row {
                                {% set temp = states(config.entity) | float %}
                                {% set percent = ((temp + 10) / 50 * 100) | round(1) %}

                                {% if temp < 16 %}
                                  {% set rgb_light = '206,178,245' %}
                                  {% set rgb_dark  = '156,128,195' %}
                                {% elif temp < 18 %}
                                  {% set rgb_light = '163,217,245' %}
                                  {% set rgb_dark  = '113,167,195' %}
                                {% elif temp < 22 %}
                                  {% set rgb_light = '205,227,219' %}
                                  {% set rgb_dark  = '155,177,169' %}
                                {% elif temp < 24 %}
                                  {% set rgb_light = '251,217,160' %}
                                  {% set rgb_dark  = '201,167,110' %}
                                {% elif temp < 27 %}
                                  {% set rgb_light = '244,168,163' %}
                                  {% set rgb_dark  = '194,118,113' %}
                                {% else %}
                                  {% set rgb_light = '223,123,116' %}
                                  {% set rgb_dark  = '173,73,66' %}
                                {% endif %}

                                /* Detect dark mode with CSS media query and set colors accordingly */
                                --rgb: {{ rgb_light }};
                                --text-color: black !important;

                                @media (prefers-color-scheme: dark) {
                                  --rgb: {{ rgb_dark }};
                                  --text-color: white !important;
                                }

                                background:
                                  linear-gradient(95deg,
                                    rgba(var(--rgb), 0.13) 0%,
                                    rgba(var(--rgb), 0.13) {{percent}}%,
                                    rgba(var(--rgb), 0.55) {{percent}}%,
                                    rgba(12,14,18,0.42) 100%
                                  ),
                                  linear-gradient(120deg, 
                                    rgba(255,255,255,0.11) 7%, 
                                    rgba(255,255,255,0.06) 13%, 
                                    rgba(255,255,255,0.00) 38%,
                                    rgba(255,255,255,0.08) 47%, 
                                    rgba(255,255,255,0.00) 70%,
                                    rgba(255,255,255,0.09) 82%,
                                    rgba(255,255,255,0.00) 100%
                                  ),
                                  repeating-linear-gradient(100deg, rgba(255,255,255,0.011) 0 2px, rgba(0,0,0,0.015) 2px 6px);
                                }
                              }
                        - entity: sensor.single_guest_room_temperature
                          name: Single Guest Room
                          icon: mdi:account-plus
                          card_mod:
                            style: |
                              hui-generic-entity-row {
                                {% set temp = states(config.entity) | float %}
                                {% set percent = ((temp + 10) / 50 * 100) | round(1) %}

                                {% if temp < 16 %}
                                  {% set rgb_light = '206,178,245' %}
                                  {% set rgb_dark  = '156,128,195' %}
                                {% elif temp < 18 %}
                                  {% set rgb_light = '163,217,245' %}
                                  {% set rgb_dark  = '113,167,195' %}
                                {% elif temp < 22 %}
                                  {% set rgb_light = '205,227,219' %}
                                  {% set rgb_dark  = '155,177,169' %}
                                {% elif temp < 24 %}
                                  {% set rgb_light = '251,217,160' %}
                                  {% set rgb_dark  = '201,167,110' %}
                                {% elif temp < 27 %}
                                  {% set rgb_light = '244,168,163' %}
                                  {% set rgb_dark  = '194,118,113' %}
                                {% else %}
                                  {% set rgb_light = '223,123,116' %}
                                  {% set rgb_dark  = '173,73,66' %}
                                {% endif %}

                                /* Detect dark mode with CSS media query and set colors accordingly */
                                --rgb: {{ rgb_light }};
                                --text-color: black !important;

                                @media (prefers-color-scheme: dark) {
                                  --rgb: {{ rgb_dark }};
                                  --text-color: white !important;
                                }

                                background:
                                  linear-gradient(95deg,
                                    rgba(var(--rgb), 0.13) 0%,
                                    rgba(var(--rgb), 0.13) {{percent}}%,
                                    rgba(var(--rgb), 0.55) {{percent}}%,
                                    rgba(12,14,18,0.42) 100%
                                  ),
                                  linear-gradient(120deg, 
                                    rgba(255,255,255,0.11) 7%, 
                                    rgba(255,255,255,0.06) 13%, 
                                    rgba(255,255,255,0.00) 38%,
                                    rgba(255,255,255,0.08) 47%, 
                                    rgba(255,255,255,0.00) 70%,
                                    rgba(255,255,255,0.09) 82%,
                                    rgba(255,255,255,0.00) 100%
                                  ),
                                  repeating-linear-gradient(100deg, rgba(255,255,255,0.011) 0 2px, rgba(0,0,0,0.015) 2px 6px);
                                }
                              }
                        - entity: sensor.multiple_guest_room_temperature
                          name: Multiple Guest Room
                          icon: mdi:account-group
                          card_mod:
                            style: |
                              hui-generic-entity-row {
                                {% set temp = states(config.entity) | float %}
                                {% set percent = ((temp + 10) / 50 * 100) | round(1) %}

                                {% if temp < 16 %}
                                  {% set rgb_light = '206,178,245' %}
                                  {% set rgb_dark  = '156,128,195' %}
                                {% elif temp < 18 %}
                                  {% set rgb_light = '163,217,245' %}
                                  {% set rgb_dark  = '113,167,195' %}
                                {% elif temp < 22 %}
                                  {% set rgb_light = '205,227,219' %}
                                  {% set rgb_dark  = '155,177,169' %}
                                {% elif temp < 24 %}
                                  {% set rgb_light = '251,217,160' %}
                                  {% set rgb_dark  = '201,167,110' %}
                                {% elif temp < 27 %}
                                  {% set rgb_light = '244,168,163' %}
                                  {% set rgb_dark  = '194,118,113' %}
                                {% else %}
                                  {% set rgb_light = '223,123,116' %}
                                  {% set rgb_dark  = '173,73,66' %}
                                {% endif %}

                                /* Detect dark mode with CSS media query and set colors accordingly */
                                --rgb: {{ rgb_light }};
                                --text-color: black !important;

                                @media (prefers-color-scheme: dark) {
                                  --rgb: {{ rgb_dark }};
                                  --text-color: white !important;
                                }

                                background:
                                  linear-gradient(95deg,
                                    rgba(var(--rgb), 0.13) 0%,
                                    rgba(var(--rgb), 0.13) {{percent}}%,
                                    rgba(var(--rgb), 0.55) {{percent}}%,
                                    rgba(12,14,18,0.42) 100%
                                  ),
                                  linear-gradient(120deg, 
                                    rgba(255,255,255,0.11) 7%, 
                                    rgba(255,255,255,0.06) 13%, 
                                    rgba(255,255,255,0.00) 38%,
                                    rgba(255,255,255,0.08) 47%, 
                                    rgba(255,255,255,0.00) 70%,
                                    rgba(255,255,255,0.09) 82%,
                                    rgba(255,255,255,0.00) 100%
                                  ),
                                  repeating-linear-gradient(100deg, rgba(255,255,255,0.011) 0 2px, rgba(0,0,0,0.015) 2px 6px);
                                }
                              }
                        - entity: sensor.office_room_temperature
                          name: Office Room
                          icon: mdi:desktop-tower-monitor
                          card_mod:
                            style: |
                              hui-generic-entity-row {
                                {% set temp = states(config.entity) | float %}
                                {% set percent = ((temp + 10) / 50 * 100) | round(1) %}

                                {% if temp < 16 %}
                                  {% set rgb_light = '206,178,245' %}
                                  {% set rgb_dark  = '156,128,195' %}
                                {% elif temp < 18 %}
                                  {% set rgb_light = '163,217,245' %}
                                  {% set rgb_dark  = '113,167,195' %}
                                {% elif temp < 22 %}
                                  {% set rgb_light = '205,227,219' %}
                                  {% set rgb_dark  = '155,177,169' %}
                                {% elif temp < 24 %}
                                  {% set rgb_light = '251,217,160' %}
                                  {% set rgb_dark  = '201,167,110' %}
                                {% elif temp < 27 %}
                                  {% set rgb_light = '244,168,163' %}
                                  {% set rgb_dark  = '194,118,113' %}
                                {% else %}
                                  {% set rgb_light = '223,123,116' %}
                                  {% set rgb_dark  = '173,73,66' %}
                                {% endif %}

                                /* Detect dark mode with CSS media query and set colors accordingly */
                                --rgb: {{ rgb_light }};
                                --text-color: black !important;

                                @media (prefers-color-scheme: dark) {
                                  --rgb: {{ rgb_dark }};
                                  --text-color: white !important;
                                }

                                background:
                                  linear-gradient(95deg,
                                    rgba(var(--rgb), 0.13) 0%,
                                    rgba(var(--rgb), 0.13) {{percent}}%,
                                    rgba(var(--rgb), 0.55) {{percent}}%,
                                    rgba(12,14,18,0.42) 100%
                                  ),
                                  linear-gradient(120deg, 
                                    rgba(255,255,255,0.11) 7%, 
                                    rgba(255,255,255,0.06) 13%, 
                                    rgba(255,255,255,0.00) 38%,
                                    rgba(255,255,255,0.08) 47%, 
                                    rgba(255,255,255,0.00) 70%,
                                    rgba(255,255,255,0.09) 82%,
                                    rgba(255,255,255,0.00) 100%
                                  ),
                                  repeating-linear-gradient(100deg, rgba(255,255,255,0.011) 0 2px, rgba(0,0,0,0.015) 2px 6px);
                                }
                              }
                        - entity: sensor.guest_bathroom_temperature
                          name: Guest Bathroom
                          icon: mdi:water
                          card_mod:
                            style: |
                              hui-generic-entity-row {
                                {% set temp = states(config.entity) | float %}
                                {% set percent = ((temp + 10) / 50 * 100) | round(1) %}

                                {% if temp < 16 %}
                                  {% set rgb_light = '206,178,245' %}
                                  {% set rgb_dark  = '156,128,195' %}
                                {% elif temp < 18 %}
                                  {% set rgb_light = '163,217,245' %}
                                  {% set rgb_dark  = '113,167,195' %}
                                {% elif temp < 22 %}
                                  {% set rgb_light = '205,227,219' %}
                                  {% set rgb_dark  = '155,177,169' %}
                                {% elif temp < 24 %}
                                  {% set rgb_light = '251,217,160' %}
                                  {% set rgb_dark  = '201,167,110' %}
                                {% elif temp < 27 %}
                                  {% set rgb_light = '244,168,163' %}
                                  {% set rgb_dark  = '194,118,113' %}
                                {% else %}
                                  {% set rgb_light = '223,123,116' %}
                                  {% set rgb_dark  = '173,73,66' %}
                                {% endif %}

                                /* Detect dark mode with CSS media query and set colors accordingly */
                                --rgb: {{ rgb_light }};
                                --text-color: black !important;

                                @media (prefers-color-scheme: dark) {
                                  --rgb: {{ rgb_dark }};
                                  --text-color: white !important;
                                }

                                background:
                                  linear-gradient(95deg,
                                    rgba(var(--rgb), 0.13) 0%,
                                    rgba(var(--rgb), 0.13) {{percent}}%,
                                    rgba(var(--rgb), 0.55) {{percent}}%,
                                    rgba(12,14,18,0.42) 100%
                                  ),
                                  linear-gradient(120deg, 
                                    rgba(255,255,255,0.11) 7%, 
                                    rgba(255,255,255,0.06) 13%, 
                                    rgba(255,255,255,0.00) 38%,
                                    rgba(255,255,255,0.08) 47%, 
                                    rgba(255,255,255,0.00) 70%,
                                    rgba(255,255,255,0.09) 82%,
                                    rgba(255,255,255,0.00) 100%
                                  ),
                                  repeating-linear-gradient(100deg, rgba(255,255,255,0.011) 0 2px, rgba(0,0,0,0.015) 2px 6px);
                                }
                              }
            - type: vertical-stack
              cards:
                - type: custom:mushroom-title-card
                  title: Room Humidity
                  card_mod:
                    style: |
                      ha-card {
                        --title-font-size: 20px !important;
                      }
                - type: custom:stack-in-card
                  cards:
                    - type: entities
                      entities:
                        - entity: sensor.living_area_humidity
                          name: Living Area
                          icon: mdi:sofa
                          card_mod:
                            style:
                              .: |
                                hui-generic-entity-row {
                                  {% set hum = states(config.entity) | float %}
                                  {% set percent = (hum if hum <= 100 else 100) | round(1) %}
                                  {% if hum < 31 %}
                                    {% set rgb = '153,51,45' %}
                                  {% elif hum < 51 %}
                                    {% set rgb = '34,139,34' %}
                                  {% else %}
                                    {% set rgb = '153,51,45' %}
                                  {% endif %}
                                  background:
                                    linear-gradient(95deg,
                                      rgba({{rgb}},0.13) 0%,
                                      rgba({{rgb}},0.13) {{percent}}%,
                                      rgba({{rgb}},0.55) {{percent}}%,
                                      rgba(12,14,18,0.42) 100%
                                    ),
                                    linear-gradient(120deg, 
                                      rgba(255,255,255,0.11) 7%, 
                                      rgba(255,255,255,0.06) 13%, 
                                      rgba(255,255,255,0.00) 38%,
                                      rgba(255,255,255,0.08) 47%, 
                                      rgba(255,255,255,0.00) 70%,
                                      rgba(255,255,255,0.09) 82%,
                                      rgba(255,255,255,0.00) 100%
                                    ),
                                    repeating-linear-gradient(100deg, rgba(255,255,255,0.011) 0 2px, rgba(0,0,0,0.015) 2px 6px);
                                }
                        - entity: sensor.master_bedroom_humidity
                          name: Master Bedroom
                          icon: mdi:bed-king
                          card_mod:
                            style:
                              .: |
                                hui-generic-entity-row {
                                  {% set hum = states(config.entity) | float %}
                                  {% set percent = (hum if hum <= 100 else 100) | round(1) %}
                                  {% if hum < 31 %}
                                    {% set rgb = '153,51,45' %}
                                  {% elif hum < 51 %}
                                    {% set rgb = '34,139,34' %}
                                  {% else %}
                                    {% set rgb = '153,51,45' %}
                                  {% endif %}
                                  background:
                                    linear-gradient(95deg,
                                      rgba({{rgb}},0.13) 0%,
                                      rgba({{rgb}},0.13) {{percent}}%,
                                      rgba({{rgb}},0.55) {{percent}}%,
                                      rgba(12,14,18,0.42) 100%
                                    ),
                                    linear-gradient(120deg, 
                                      rgba(255,255,255,0.11) 7%, 
                                      rgba(255,255,255,0.06) 13%, 
                                      rgba(255,255,255,0.00) 38%,
                                      rgba(255,255,255,0.08) 47%, 
                                      rgba(255,255,255,0.00) 70%,
                                      rgba(255,255,255,0.09) 82%,
                                      rgba(255,255,255,0.00) 100%
                                    ),
                                    repeating-linear-gradient(100deg, rgba(255,255,255,0.011) 0 2px, rgba(0,0,0,0.015) 2px 6px);
                                }
                        - entity: sensor.baby_room_humidity
                          name: Baby Room
                          icon: mdi:baby-carriage
                          card_mod:
                            style:
                              .: |
                                hui-generic-entity-row {
                                  {% set hum = states(config.entity) | float %}
                                  {% set percent = (hum if hum <= 100 else 100) | round(1) %}
                                  {% if hum < 31 %}
                                    {% set rgb = '153,51,45' %}
                                  {% elif hum < 51 %}
                                    {% set rgb = '34,139,34' %}
                                  {% else %}
                                    {% set rgb = '153,51,45' %}
                                  {% endif %}
                                  background:
                                    linear-gradient(95deg,
                                      rgba({{rgb}},0.13) 0%,
                                      rgba({{rgb}},0.13) {{percent}}%,
                                      rgba({{rgb}},0.55) {{percent}}%,
                                      rgba(12,14,18,0.42) 100%
                                    ),
                                    linear-gradient(120deg, 
                                      rgba(255,255,255,0.11) 7%, 
                                      rgba(255,255,255,0.06) 13%, 
                                      rgba(255,255,255,0.00) 38%,
                                      rgba(255,255,255,0.08) 47%, 
                                      rgba(255,255,255,0.00) 70%,
                                      rgba(255,255,255,0.09) 82%,
                                      rgba(255,255,255,0.00) 100%
                                    ),
                                    repeating-linear-gradient(100deg, rgba(255,255,255,0.011) 0 2px, rgba(0,0,0,0.015) 2px 6px);
                                }
                        - entity: sensor.single_guest_room_humidity
                          name: Single Guest Room
                          icon: mdi:account-plus
                          card_mod:
                            style:
                              .: |
                                hui-generic-entity-row {
                                  {% set hum = states(config.entity) | float %}
                                  {% set percent = (hum if hum <= 100 else 100) | round(1) %}
                                  {% if hum < 31 %}
                                    {% set rgb = '153,51,45' %}
                                  {% elif hum < 51 %}
                                    {% set rgb = '34,139,34' %}
                                  {% else %}
                                    {% set rgb = '153,51,45' %}
                                  {% endif %}
                                  background:
                                    linear-gradient(95deg,
                                      rgba({{rgb}},0.13) 0%,
                                      rgba({{rgb}},0.13) {{percent}}%,
                                      rgba({{rgb}},0.55) {{percent}}%,
                                      rgba(12,14,18,0.42) 100%
                                    ),
                                    linear-gradient(120deg, 
                                      rgba(255,255,255,0.11) 7%, 
                                      rgba(255,255,255,0.06) 13%, 
                                      rgba(255,255,255,0.00) 38%,
                                      rgba(255,255,255,0.08) 47%, 
                                      rgba(255,255,255,0.00) 70%,
                                      rgba(255,255,255,0.09) 82%,
                                      rgba(255,255,255,0.00) 100%
                                    ),
                                    repeating-linear-gradient(100deg, rgba(255,255,255,0.011) 0 2px, rgba(0,0,0,0.015) 2px 6px);
                                }
                        - entity: sensor.multiple_guest_room_humidity
                          name: Multiple Guest Room
                          icon: mdi:account-group
                          card_mod:
                            style:
                              .: |
                                hui-generic-entity-row {
                                  {% set hum = states(config.entity) | float %}
                                  {% set percent = (hum if hum <= 100 else 100) | round(1) %}
                                  {% if hum < 31 %}
                                    {% set rgb = '153,51,45' %}
                                  {% elif hum < 51 %}
                                    {% set rgb = '34,139,34' %}
                                  {% else %}
                                    {% set rgb = '153,51,45' %}
                                  {% endif %}
                                  background:
                                    linear-gradient(95deg,
                                      rgba({{rgb}},0.13) 0%,
                                      rgba({{rgb}},0.13) {{percent}}%,
                                      rgba({{rgb}},0.55) {{percent}}%,
                                      rgba(12,14,18,0.42) 100%
                                    ),
                                    linear-gradient(120deg, 
                                      rgba(255,255,255,0.11) 7%, 
                                      rgba(255,255,255,0.06) 13%, 
                                      rgba(255,255,255,0.00) 38%,
                                      rgba(255,255,255,0.08) 47%, 
                                      rgba(255,255,255,0.00) 70%,
                                      rgba(255,255,255,0.09) 82%,
                                      rgba(255,255,255,0.00) 100%
                                    ),
                                    repeating-linear-gradient(100deg, rgba(255,255,255,0.011) 0 2px, rgba(0,0,0,0.015) 2px 6px);
                                }
          show_pagination: true
          card_spacing: 15
          enable_loopback: false
          swipe_direction: horizontal
          enable_auto_swipe: false
          auto_swipe_interval: 2000
          enable_reset_after: false
          reset_after_timeout: 30000
          reset_target_card: 1
          card_mod:
            style: |
              :host {
                --simple-swipe-card-pagination-dot-active-color: var(--primary-text-color);
                --simple-swipe-card-pagination-dot-size: 7px;
                --simple-swipe-card-transition-speed: 0.5s;
              }  
    hide_in_preview: true
  - type: custom:local-conditional-card
    id: active
    default: hide
    card:
      type: vertical-stack
      cards:
        - type: custom:paper-buttons-row
          styles:
            background-color: rgba(215, 215, 215, 0.3)
            border: 4px solid none
            border-radius: 20px
            justify-content: center
            width: max-content
            margin: 0 auto 12px auto
          buttons:
            - layout: name
              name: Home
              ripple: none
              tap_action:
                action: fire-dom-event
                local_conditional_card:
                  action: set
                  ids:
                    - home: show
                    - environment: hide
                    - active: hide
              styles:
                name:
                  color: var(--primary-text-color)
                  padding: 0 22px
                button:
                  background: none
                  border-radius: 24px
                  height: 24px
                  display: flex
            - layout: name
              name: Environment
              ripple: none
              tap_action:
                action: fire-dom-event
                local_conditional_card:
                  action: set
                  ids:
                    - home: hide
                    - environment: show
                    - active: hide
              styles:
                name:
                  color: var(--primary-text-color)
                  padding: 0 22px
                button:
                  background: none
                  border-radius: 24px
                  height: 24px
                  display: flex
            - layout: name
              name: Active
              ripple: none
              tap_action:
                action: fire-dom-event
                local_conditional_card:
                  action: set
                  ids:
                    - home: hide
                    - environment: hide
                    - active: show
              styles:
                name:
                  color: "{{ states('sensor.theme_tertiary_color') }}"
                  font-weight: bold
                  padding: 0 22px
                button:
                  background: "{{ states('sensor.theme_on_tertiary_color') }}"
                  border-radius: 24px
                  height: 24px
                  display: flex
        - type: custom:vertical-stack-in-card
          cards:
            - type: conditional
              conditions:
                - condition: state
                  entity: media_player.[YOUR_MEDIA_ENTITY]
                  state: playing
              card:
                type: vertical-stack
                cards:
                  - type: custom:stack-in-card
                    cards:
                      - type: custom:mushroom-media-player-card
                        entity: media_player.[YOUR_MEDIA_ENTITY]
                        icon: mdi:play
                        name: Media Player
                        use_media_info: true
                        use_media_artwork: false
                        show_volume_level: false
                        media_controls:
                          - play_pause_stop
                          - previous
                          - next
                        volume_controls:
                          - volume_buttons
                          - volume_set
                        fill_container: false
                        collapsible_controls: true
                        tap_action:
                          action: none
                        layout: vertical
                        card_mod:
                          style:
                            mushroom-media-player-volume-control$: |
                              mushroom-slider {
                                --main-color: #cccccc !important;
                                --bg-color: rgb(var(--album-art-color)) !important;
                              }
                            .: |
                              mushroom-shape-icon {
                                display: flex;
                                {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                {% if media_type == 'tvshow' %}
                                  --card-mod-icon: mdi:television-classic;
                                  animation: flicker 1s linear infinite alternate;
                                {% elif media_type == 'movie' %}
                                  --card-mod-icon: mdi:movie-roll;
                                  animation: spin 2s linear infinite reverse;
                                {% elif media_type == 'music' %}
                                  --card-mod-icon: mdi:music;
                                  animation: beat 1.3s ease-out infinite both;
                                {% elif media_type == 'playlist' %}
                                  --card-mod-icon: mdi:music;
                                  animation: beat 1.3s ease-out infinite both;
                                {% else %}
                                  --card-mod-icon: mdi:play;
                                {% endif %}

                                {{ 'animation: none;' if not is_state(config.entity, 'playing') }}

                              }
                              @keyframes flicker {
                                0%, 31.98%, 32.98%, 34.98%, 36.98%, 39.98%, 67.98%, 68.98%, 95.98%, 96.98%, 97.98%, 98.98%, 100% { --icon-color: rgba(var(--album-art-color), 1); }
                                32%, 33%, 35%, 36%, 37%, 40%, 68%, 69%, 96%, 97%, 98%, 99% { --icon-color: rgba(var(--album-art-color), 0.6); }
                              }
                              @keyframes beat {
                                0%, 60% { --icon-symbol-size: 21px; }
                                5%, 17%, 57% { --icon-symbol-size: 22px; }
                                10%, 20%, 51% { --icon-symbol-size: 23px; }
                                25%, 45% { --icon-symbol-size: 24px; }
                                30%, 39% { --icon-symbol-size: 25px; }
                                33% { --icon-symbol-size: 26px; }
                              }
                              .: |
                                mushroom-shape-icon {

                                  /* Change media player icon based on media type */
                                  {% set media_type = state_attr(config.entity, 'media_content_type') %}
                                  --card-mod-icon:
                                  {% if media_type == 'tvshow' %}
                                     mdi:television-classic
                                  {% elif media_type == 'movie' %}
                                    mdi:movie-roll
                                  {% elif media_type == 'music' %}
                                    mdi:music
                                  {% elif media_type == 'playlist' %}
                                    mdi:music
                                  {% else %}
                                    mdi:play
                                  {% endif %};
                                }
                                ha-card {

                                  /* Remove border from media player */
                                  --ha-card-border-width: 0;

                                  /* Apply album art color to media player icon & volume bar */
                                  --rgb-state-media-player: var(--album-art-color);

                                  /* Disable transitions */
                                  transition: all 0s;
                                }
                                .actions {

                                  /* Apply to controls only when active */
                                  {% if is_state(config.entity, ['playing', 'paused']) %}

                                    /* Apply album art color to media player controls */
                                    --rgb-primary-text-color: var(--album-art-color);
                                    --primary-text-color: rgb(var(--album-art-color));

                                    /* Add space for progress bar */
                                    padding-top: 24px;
                                  {% endif %}
                                }
                      - entity: media_player.[YOUR_MEDIA_ENTITY]
                        hide:
                          icon: true
                          name: true
                          runtime: true
                          source: true
                          power: true
                          state_label: true
                          volume: true
                          info: true
                          progress: false
                          controls: true
                        more_info: false
                        type: custom:mini-media-player
                        toggle_power: false
                        group: true
                        card_mod:
                          style:
                            mmp-progress$: |
                              paper-progress {

                                /* Hide the progress bar when not playing or paused */
                                {{ 'display: none;' if not is_state(config.entity, ['playing', 'paused']) }}

                                /* Apply album art color to progress bar when paused */
                                --paper-progress-container-color: rgba(var(--album-art-color), 0.2) !important;
                                
                                /* Apply album art color to progress bar when playing */
                                --paper-progress-active-color: rgb(var(--album-art-color)) !important;
                              }
                            .: |
                              ha-card {
                                
                                /* Move progress bar up into gap */
                                bottom: calc(3 * var(--mush-spacing, 12px) + var(--mush-control-height, -25px));
                                
                                /* Correct margins for progress bar */
                                margin: 0px calc(1.618 * var(--mush-spacing, 12px)) calc(-1 * var(--mush-spacing, 12px));

                                /* Set height of card to match pregress bar height */
                                height: var(--mmp-progress-height);

                                /* Remove border outline */
                                --ha-card-border-width: 0;

                                /* Round corners of progress bar */
                                --mmp-border-radius: var(--control-border-radius, 12px) !important;

                                /* Set height of progress bar */
                                --mmp-progress-height: var(--mush-spacing, 12px) !important;

                                /* Remove transitions to prevent progress bar floating in */
                                transition: all 0s;
                              }
                    card_mod:
                      style: |
                        ha-card:before {
                          content: "";
                          
                          /* Position and size background color */
                          position: absolute;
                          height: 100%;
                          width: 100%;

                          /* Apply background to media player using album art color */
                          {% if is_state('media_player.[YOUR_MEDIA_ENTITY]', ['playing', 'paused']) %}
                            background: rgba({{ states('sensor.[YOUR_MEDIA_ENTITY]') }}, 0.3);
                          {% endif %}
                          
                        }
                        ha-card {

                          /* Apply blended album art background */
                          {% if is_state('media_player.[YOUR_MEDIA_ENTITY]', ['playing', 'paused']) %}
                            background: url( '{{ state_attr("media_player.[YOUR_MEDIA_ENTITY]", "entity_picture") }}' ) no-repeat, 
                                        linear-gradient(to left, transparent, rgb(var(--rgb-card-background-color)) 50%);

                            /* Adjust for different aspect ratio of TV shows episode art */
                            {% if state_attr('media_player.[YOUR_MEDIA_ENTITY]', 'media_content_type') == 'tvshow' %}
                              background-size: 50% 100%, cover;
                            {% else %}
                              background-size: 50% auto, cover;
                            {% endif %}

                            /* Position art on right side */
                            background-position: right;

                            /* Blend art with background using saturation */
                            background-blend-mode: saturation;
                          {% endif %}
                        }
                        :host {

                          /* Assign album art color to variable used in media player. Default to indigo when idle */
                          --album-art-color:      
                          {% if is_state('media_player.[YOUR_MEDIA_ENTITY]', ['playing', 'paused']) %}
                            {{ states('sensor.[YOUR_MEDIA_ENTITY]_muted_color') }}
                          {% else %}
                            var(--mush-rgb-indigo, 63, 81, 181)
                          {% endif %};
                        }
            - type: conditional
              conditions:
                - condition: and
                  conditions:
                    - condition: state
                      entity: media_player.[YOUR_MEDIA_ENTITY]
                      state: playing
                    - condition: or
                      conditions:
                        - condition: state
                          entity: media_player.all_speakers
                          state: playing
                        - condition: state
                          entity: media_player.all_speakers
                          state: "on"
              card:
                type: custom:mushroom-template-card
                entity: media_player.all_speakers
                icon: ""
                secondary: >
                  {% set speakers = state_attr('media_player.all_speakers',
                  'entity_id') %}

                  {% set playing_count = speakers | select('is_state',
                  'playing') | list | length %}

                  {{ playing_count }} speaker{{ 's' if playing_count != 1 else
                  '' }} {{ 'are' if playing_count != 1 else 'is' }} playing
                tap_action:
                  action: none
                primary: ""
        - type: vertical-stack
          cards:
            - type: conditional
              conditions:
                - condition: state
                  entity: light.all_lights
                  state: "on"
              card:
                type: custom:mushroom-title-card
                title: Lights
                card_mod:
                  style: |
                    ha-card {
                      --title-font-size: 20px !important;
                    }
            - type: custom:auto-entities
              card:
                square: false
                type: grid
                columns: 2
              card_param: cards
              filter:
                include:
                  - group: light.all_lights
                    state: "on"
                    options:
                      type: custom:mushroom-light-card
                      use_light_color: true
                      show_brightness_control: true
                      show_color_control: true
                      layout: vertical
                exclude: []
              show_empty: false
              sort:
                method: entity_id
        - type: vertical-stack
          cards:
            - type: conditional
              conditions:
                - condition: state
                  entity: switch.all_light_switches
                  state: "on"
              card:
                type: custom:mushroom-title-card
                title: Light Switches
                card_mod:
                  style: |
                    ha-card {
                      --title-font-size: 20px !important;
                    }
            - type: custom:auto-entities
              card:
                square: false
                type: grid
                columns: 2
              card_param: cards
              filter:
                include:
                  - group: switch.all_light_switches
                    state: "on"
                    options:
                      type: custom:mushroom-template-card
                      primary: "{{ state_attr(config.entity, 'friendly_name') }}"
                      icon: "{{ state_attr(config.entity, 'icon') }}"
                      icon_color: "#FFBF00"
                      layout: vertical
                      card_mod:
                        style:
                          mushroom-shape-icon$: |
                            .shape {
                              --shape-color: #C2A878 !important;
                            }
                          ha-state-icon: |
                            ha-state-icon {
                              color: var(--primary-text-color)
                            }
                exclude: []
              show_empty: false
              sort:
                method: entity_id
        - type: vertical-stack
          cards:
            - type: conditional
              conditions:
                - condition: state
                  entity: fan.all_fans
                  state: "on"
              card:
                type: custom:mushroom-title-card
                title: Fans
                card_mod:
                  style: |
                    ha-card {
                      --title-font-size: 20px !important;
                    }
            - type: custom:auto-entities
              card:
                square: false
                type: grid
                columns: 2
              card_param: cards
              filter:
                include:
                  - group: fan.all_fans
                    state: "on"
                    options:
                      type: custom:mushroom-template-card
                      primary: "{{ state_attr(config.entity, 'friendly_name') }}"
                      icon: mdi:fan
                      icon_color: var(--primary-text-color)
                      layout: vertical
                      card_mod:
                        style:
                          mushroom-shape-icon$: |
                            .shape {
                                --shape-animation: spin 1s linear infinite;
                                --shape-color: #b5e0f7;
                            }
                          .: |
                            ha-card {
                              height: 113px !important;
                              }
                            ha-state-icon {
                              color: #6082B6;
                              }
                exclude: []
              show_empty: false
              sort:
                method: friendly_name
        - type: conditional
          conditions:
            - condition: and
              conditions:
                - condition: state
                  entity: media_player.[YOUR_MEDIA_ENTITY]
                  state_not: playing
                - condition: state
                  entity: light.all_lights
                  state: "off"
                - condition: state
                  entity: switch.all_light_switches
                  state: "off"
                - condition: state
                  entity: fan.all_fans
                  state: "off"
          card:
            type: custom:mushroom-template-card
            secondary: Nothing is active right now
    hide_in_preview: true
card_mod:
  style: |
    ha-card {
      margin-top: 10px !important;
    }
